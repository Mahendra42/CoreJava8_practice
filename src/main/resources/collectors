Collectors :
-------------
- Collectors is a final class that extends the Object class.
- It provides reduction operations, such as accumulating elements into collections, summarizing elements according to various criteria, etc.
- Implementations of the Collector interface that implement various useful reduction operations, such as accumulating elements into collections,
  summarizing elements according to various criteria, etc.

Methods in Collectors Class :
------------------------------
- averagingDouble(ToDoubleFunction<? super T> mapper)
- averagingInt(ToIntFunction<? super T> mapper)
- averagingLong(ToLongFunction<? super T> mapper)

- collectingAndThen(Collector<T,A,R> downstream, Function<R,RR> finisher)
- counting()

- groupingBy(Function<? super T,? extends K> classifier)
- groupingBy(Function<? super T,? extends K> classifier, Collector<? super T,A,D> downstream)
- groupingBy(Function<? super T,? extends K> classifier, Supplier<M> mapFactory, Collector<? super T,A,D> downstream)
- groupingByConcurrent(Function<? super T,? extends K> classifier)
- groupingByConcurrent(Function<? super T,? extends K> classifier, Collector<? super T,A,D> downstream)
- groupingByConcurrent(Function<? super T,? extends K> classifier, Supplier<M> mapFactory, Collector<? super T,A,D> downstream)

- Collector<CharSequence,?,String>	joining()
- Collector<CharSequence,?,String>	joining(CharSequence delimiter)
- Collector<CharSequence,?,String>	joining(CharSequence delimiter, CharSequence prefix, CharSequence suffix)

- mapping(Function<? super T,? extends U> mapper, Collector<? super U,A,R> downstream)
- maxBy(Comparator<? super T> comparator)
- minBy(Comparator<? super T> comparator)

- partitioningBy(Predicate<? super T> predicate)
- partitioningBy(Predicate<? super T> predicate, Collector<? super T,A,D> downstream)

- reducing(BinaryOperator<T> op)
- Collector<T,?,T>	reducing(T identity, BinaryOperator<T> op)
- reducing(U identity, Function<? super T,? extends U> mapper, BinaryOperator<U> op)

- summarizingDouble(ToDoubleFunction<? super T> mapper)
- summarizingInt(ToIntFunction<? super T> mapper)
- summarizingLong(ToLongFunction<? super T> mapper)

- summingDouble(ToDoubleFunction<? super T> mapper)
- summingInt(ToIntFunction<? super T> mapper)
- summingLong(ToLongFunction<? super T> mapper)

- toCollection(Supplier<C> collectionFactory)

- toConcurrentMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper)
- toConcurrentMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper, BinaryOperator<U> mergeFunction)
- toConcurrentMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper, BinaryOperator<U> mergeFunction, Supplier<M> mapSupplier)

- toList()
- toMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper)
- toMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper, BinaryOperator<U> mergeFunction)
- toMap(Function<? super T,? extends K> keyMapper, Function<? super T,? extends U> valueMapper, BinaryOperator<U> mergeFunction, Supplier<M> mapSupplier)
- toSet()
